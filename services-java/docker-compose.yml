version: "3.8"

name: api-doc-conf
services:

  info-service:
    build:
      context: ./info-service
    container_name: info-service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9093
      PET_SERVICE_URL: http://pet-service:8080
      USER_SERVICE_URL: http://user-service:8080
    ports:
      - "8181:8080"
    networks:
      - api-doc-conf

  pet-service:
    build:
      context: ./pet-service
    container_name: pet-service
    ports:
      - "8182:8080"
    networks:
      - api-doc-conf

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8183:8080"
    networks:
      - api-doc-conf


  kafka:
    image: bitnami/kafka:3.2
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CLIENT://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,CLIENT://kafka:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - api-doc-conf
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - api-doc-conf

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8888:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
    depends_on:
      - kafka
    networks:
      - api-doc-conf

networks:
  api-doc-conf:
